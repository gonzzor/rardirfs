.TH rardirfs 1 "4 nov 2009" "RarDirFs 0.1" "RarDirFs Manual"
.SH NAME
rardirfs \- mount a directory with direct access to RAR archive content
.SH SYNOPSIS
.B rardirfs 
.I srcdir mountpoint 
[options]
.SH DESCRIPTION
Mount a directory read only where all rar archives are hidden and their files are shown instead. Beside this it can also filter files and flatten out directories.

The big difference from other fuse based rar archive file systems is that RarDirFs doesn't unpack the whole file when you open it, it just read directly from the archive. No extra storage, no extra time, just as you normally would. Because of this design choice some limitations arose, see under BUGS.

In order to support compressed archives RarDirFs uses the unrar command. It will use this feature if unrar can be found in PATH.

.SH OPTIONS
.TP
.B "-h/--help"
Print help options.
.TP
.B "--version"
Print rardirfs and fuse versions.
.TP
.B \-o
Options are specified with a
.B \-o
flag followed by a comma separated string of options. 
.RS
.TP
.B only_first=OPT
Select behaviour for split archives. To get a list of all files inside an archive, all rar files needs to be scanned. This creates an initial performance hit during scanning.

.B yes
only show first file, this is the fastest alternative. Use this if you only want the first file, or you know that there is only one file in the archive.

.B auto
same as yes if only one file is found in first rar archive otherwise same as no.

.B no
show all files.

.TP
.B filter=FILE
A file containing patterns used to filter out entries. An entry that matches any pattern in FILE will not be available. If /etc/rardirfs/filter exists it is used as default.

The file should contain one pattern per line. Lines starting with # are ignored. All patterns must be compatible with Python re module.

.TP
.B flatten=FILE
A file containing patterns used to flatten out directories. A directory matching a pattern will be replaced by it's content. If /etc/rardirfs/flatten exists it is used as default.

The file uses same format as 
.B filter
above.

.TP
.B cache_path=PATH
When using unrar to decompress archives use PATH as a cache for the files. Make sure you have space for all uncompressed archives you might have. Otherwise read operations can return "No space left on device". If PATH doesn't exist it will be created. Default is /var/cache/rardirfs/.

.TP
.B disable_unrar
Disable support for unrar when archive is compressed. Default is to use unrar if it can be found.

.SH FUSE OPTIONS
.TP
.B "-d/-o debug"
enable debug output (implies -f)
.TP
.B "-f"
foreground operation

.TP
.B \-o
Options are specified with a
.B \-o
flag followed by a comma separated string of options. 
.RS
.TP
.B allow_other
allow access to other users

.TP
.B allow_root
allow access to root
.TP
.B nonempty
allow mounts over non-empty file/dir
.TP
.B default_permissions
enable permission checking by kernel
.TP
.B fsname=NAME
set filesystem name
.TP
.B subtype=NAME
set filesystem type
.TP
.B large_read
issue large read requests (2.4 only)
.TP
.B max_read=N
set maximum size of read requests
.TP
.B hard_remove
immediate removal (don't hide files)
.TP
.B use_ino
let filesystem set inode numbers
.TP
.B readdir_ino
try to fill in d_ino in readdir
.TP
.B direct_io
use direct I/O
.TP
.B kernel_cache
cache files in kernel
.TP
.B [no]auto_cache
enable caching based on modification times (off)
.TP
.B umask=M
set file permissions (octal)
.TP
.B uid=N
set file owner
.TP
.B gid=N
set file group
.TP
.B entry_timeout=T
cache timeout for names (1.0s)
.TP
.B negative_timeout=T
cache timeout for deleted names (0.0s)
.TP
.B attr_timeout=T
cache timeout for attributes (1.0s)
.TP
.B ac_attr_timeout=T
auto cache timeout for attributes (attr_timeout)
.TP
.B intr
allow requests to be interrupted
.TP
.B intr_signal=NUM
signal to send on interrupt (10)
.TP
.B modules=M1[:M2...]
names of modules to push onto filesystem stack
.TP
.B max_write=N
set maximum size of write requests
.TP
.B max_readahead=N
set maximum readahead
.TP
.B async_read
perform reads asynchronously (default)
.TP
.B sync_read
perform reads synchronously
.TP
.B atomic_o_trunc
enable atomic open+truncate support
.TP
.B big_writes
enable larger than 4kB writes
.TP
.B no_remote_lock
disable remote file locking

.SH BUGS
.TP
RarDirFs does not verify that the RAR archive is correct or complete.
.TP
Directories inside archives will be flattened.
.TP
Currently it's undefined what happens on a name clatch. This can happen if you flatten a directory, have an archive containing directories or a normal file colides with file inside an archive.

.SH AUTHOR
Jonas Jonsson <jonas@websystem.se>

.SH SEE ALSO
.BR mount(8)
